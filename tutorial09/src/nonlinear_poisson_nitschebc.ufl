cell = triangle
degree = 1
V = FiniteElement("CG", cell, degree)
u = TrialFunction(V)
v = TestFunction(V)

x = SpatialCoordinate(cell)
dim = 2
eta = 2
g = x[0]*x[0] + x[1]*x[1]
f = - 2*dim + eta*g*g

def q(u):
    return eta*u*u

stab = 100
n = FacetNormal(cell)('+')

r = inner(grad(u), grad(v)) * dx \
  + q(u) * v * dx \
  - f * v * dx \
  - inner(grad(u), n) * v *  ds \
  - (u-g) * inner(grad(v), n) * ds \
  + stab * (u-g) * v * ds

exact_solution = g
interpolate_expression = g
